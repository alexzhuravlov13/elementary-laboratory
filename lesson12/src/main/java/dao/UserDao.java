package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import entity.User;
import util.DbUtil;

public class UserDao implements DAO<User>
{
    @Override public boolean create(User user)
    {
        try (Connection con = DbUtil.getConnectionFromPool())
        {
            final PreparedStatement pStmt = con.prepareStatement("INSERT INTO users (name, login, password) VALUES (?, ?, ?)");
            pStmt.setString(1, user.getName());
            pStmt.setString(2, user.getLogin());
            pStmt.setString(3, user.getPassword());

            pStmt.execute();

            final long key = getAutogeneratedKey(pStmt);
            user.setId(key);

            return true;
        }
        catch (SQLException e)
        {
            e.printStackTrace();
            return false;
        }
    }

    private long getAutogeneratedKey(PreparedStatement pStmt) throws SQLException
    {
        final ResultSet keySet = pStmt.getGeneratedKeys();
        keySet.next();
        return keySet.getLong(1);
    }

    @Override public User read(long userId)
    {
        try (Connection con = DbUtil.getConnectionFromPool())
        {
            PreparedStatement pStmt = con.prepareStatement("SELECT * from users WHERE id = ?");
            pStmt.setLong(1, userId);
            ResultSet resultSet = pStmt.executeQuery();
            resultSet.next();

            long id = resultSet.getLong("id");
            String name = resultSet.getString("name");
            String login = resultSet.getString("login");
            String password = resultSet.getString("password");

            return new User(id, name, login, password);
        }
        catch (SQLException e)
        {
            e.printStackTrace();
            return null;
        }
    }

    @Override public List<User> readAll()
    {
        return null;
    }

    @Override public boolean update(User entity)
    {
        return false;
    }

    @Override public boolean delete(User entity)
    {
        return false;
    }
}
